dataSource.driverClassName=org.hsqldb.jdbc.JDBCDriver
dataSource.url=jdbc:hsqldb:file:/tmp/tests-db;ifexists=false?user=aUserName&password=3xLVz
dataSource.username=aUserName
dataSource.password=3xLVz
hibernate.dialect=org.hibernate.dialect.HSQLDialect
hibernate.hbm2ddl.auto=create-drop


# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:hsqldb:file:/tmp/tests-db;ifexists=false?user=aUserName&password=3xLVz

# Username and password
spring.datasource.username = aUserName
spring.datasource.password = 3xLVz

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

spring.data.jpa.repositories.enabled=true

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = create-drop

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.HSQLDialect


logging.level.twino.test.loan=DEBUG

location.resolve.request.timeout.millis = 10000
location.default.value = lv
max.request.per.second = 5